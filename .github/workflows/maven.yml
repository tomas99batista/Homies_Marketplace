# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5 
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Maven Package
      run: mvn -f projSpring/homies_marketplace/pom.xml clean package -DskipTests
    - name: Sonarcloud Check
      run: mvn -f projSpring/homies_marketplace/pom.xml -B -q verify sonar:sonar -Dsonar.projectKey=tomas99batista_Homies_Marketplace -Dsonar.host.url=http://sonarcloud.io -Dsonar.login=8ccea55f9b6d6437ca66ce12e62339a97a6852cd -Dsonar.organization=tomas99batista  
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Maven Verify
      run: mvn -f projSpring/homies_marketplace/pom.xml clean verify
    
